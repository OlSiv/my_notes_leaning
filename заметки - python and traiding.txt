
telegram - избранное - 23.08.2025



******************************************

# хранить и отображать баланс, имя, название программы
# устанавливать имя пользователя 
# добавлять сумму на баланс 
# проводить аудит баланса и присваивать статус 
# рассчитывать потенциальный выигрыш 
# получать текущую котировку биткоина 
# принимать пари 
# созранять историю сделок 
# учитывать обработку средств 
# учитывать прибыльные сделки 
# учитывать убыточные сделки 
# показывать меню для выбора действий 

program_name = "Опционы на Биткоин"   # тип данных - строка 
balance = 20_000   # тип данных - число 
payout = 1.80   # тип данных - число с плавающей точкой 
verified = False   # логический тип - True или False 
full_name = None   # пустая переменная без значения

balance = 30_000   # перезапись переменной balance 
balance = balance + 300   # добавляем к предыдущему значению еще 300 
#   в итоге получаем 3_300

all_deals = None 
win_deals = None 
lose_deals = None 
deals_archive = None 

# пример работы функции print()
print(program_name)  # выводим содержимое переменной program_name
print("Баланс до начисления:", balance)  # передаем 2 аргумента 
print("Коэффицент выигрыша:", payout)  # передаем 2 аргумента



******************************************


установить python - 
www.python.org/downloads/

установить VS Code - 
www.code.visualstudio.com

создать на компьютере папку (дирректорию) - 
python_and_trading 

New File - Python File - CTRL + S - сохранить файл как BinaryOptions 

# комментарий 

--
# хранить и отображать баланс, имя, название программы
# устанавливать имя пользователя 
# добавлять сумму на баланс 
# проводить аудит баланса и присваивать статус 
# рассчитывать потенциальный выигрыш 
# получать текущую котировку биткоина 
# принимать пари 
# созранять историю сделок 
# учитывать обработку средств 
# учитывать прибыльные сделки 
# учитывать убыточные сделки 
# показывать меню для выбора действий 
----

переменные - 
- str - "Hello World"
- int - 123
- float - 23.456
- bool - True/False

--
program_name = "Опционы на Биткоин"   # тип данных - строка 
balance = 20_000   # тип данных - число 
payout = 1.80   # тип данных - число с плавающей точкой 
verified = False   # логический тип - True или False 
full_name = None   # пустая переменная без значения 
----



--
balance = 30_000   # перезапись переменной balance 
balance = balance + 300   # добавляем к предыдущему значению еще 300 
#   в итоге получаем 3_300
----



--
all_deals = None 
win_deals = None 
lose_deals = None 
deals_archive = None 
----

основные математические переменные - 
+
-
*
**
/
//
%



функции - это мини-программы, которые выполняют одно конкретное действие, создаются для повторного использования кусков кода  

имя функции отражает действие, которое совершает функция 

данные, которые передаются функции, называются аргументами 

print() 

--
# пример работы функции print()
print(program_name)  # выводим содержимое переменной program_name
print("Баланс до начисления:", balance)  # передаем 2 аргумента 
print("Коэффицент выигрыша:", payout)  # передаем 2 аргумента

print("Статус верификации:", verified)  # Передаём два аргумента 
print("Коэффицент выигыша:", payout)  # Передаём два аргумента 
print("Имя пользователя:", full_name)  # Передаём два аргумента 
----

input() 

по умолчанию - принимает str (string) 

--
# Сохранение данных из функции input() в переменную 
# Берём у пользователя имя и перезаписываем переменную full_name
full_name = input("Введите своё имя >>>")
print("Приветствую", full_name)
----

преобразование типов данных 

int()
float()
str()
bool()

--
# Ввели в функцию input() 30, получили "30"
# Если ввести число, всё равно получится строка 
user_sum = input("Введите сумму для начисления: ")
user_sum = int(user_sum)  # Преобразуем в тип int 
balance = balance + user_sum  # обновляем переменную balance 
print("Добавили деньги на баланс пользователя", balance)
----

1.12 .........

41





















