https://s1.sharewood.co/threads/stepik-aleksej-goloburdin-osnovy-kompjuternyx-i-veb-texnologij-s-python-ot-didzhitaliziruj-2021.159799/
+
в телеграм - my_coding - 03.04.2024 
+
ЖД 4ТБ - coding - python

курс записан в марте 2021 

*****************************************************************

1 - 1.2 - 2-й сверху 

концептуального знания недостаточно, у вас должна быть убежденность, происходящая из личного опыта 

не отвлекаться на соцсети 

вести конспект для себя 

важность практики - сразу повторять все примеры за автором 

цель - пройти курс до конца 

*****************************************************************

2 - 2.1 - 1-й сверху

строки - каждому символу присвоен свой код  

картинки - пиксели и RGB - каждый цвет от 0 до 255 

Зеленый -
R - 0
G - 255
B - 0

Черный - 
R - 0
G - 0
B - 0

Белый -
R - 255
G - 255
B - 255

компьютер оперирует только двумя значениями - 0 и 1 

бинарная (двоичная) система счисления - 1001 0101 (1 байт = 8 бит)

0 - 0
1 - 1
2 - 10
3 - 11
4 - 100
5 - 101 
...

*****************************************************************

2 - 2.1 - 2-й сверху

ПЗУ - HDD (меньше скорость) или SSD (больше скорость но дороже HDD)

ОЗУ - RAM - оперативная память 

есть еще оперативная память внутри процессора, но маленького объема

видеокарта - в процессоре, материнской плате или отдельная

шестнадцатиричная система счисления - 0...9A...F
11111111 = FF 

обработка массива 0 и 1 зависит от программы которая их обрабатывает и соответственно от формата файлоа - mp3, jpg, doc и т.п.

*****************************************************************

2 - 2.2 - 1-й сверху

2 способа взаимодействия с компьютером -
- графический интерфейс 
- командная строка (консоль, терминал)

*****************************************************************

2 - 2.2 - 2-й сверху

консоли Windows и Linux(Unix) не совсем одинаковые 

изучать нужно Linux(Unix)

установить WSL или виртуальную машину 
или использовать контернизацию и Docker 
или Apple 

настроить BIOS - поддержку виртуализации 
как войти в BIOS - гуглить 

нужно уметь гуглить

*****************************************************************
 
2 - 2.3 - 2-й сверху

учиться нужно на тех инструментах, на которых будешь работать -
Ubuntu (Debian, CentOS)
IDE 
и т.п. 

стандартный способ взаимодействия с сервером - через консоль 

*****************************************************************
 
2 - 2.3 - 3-й сверху

установка WSL - 
установить все обновления windows и перезагрузить 
зайти в powershell (от имени администратора)
ввести - dism.exe 
установить апдейт - 
wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi
(- скинул в - телеграм - my_coding - 04.04.2024)
если нужно - включить виртуализацию в BIOS 
из магазина Microsoft установить Debian (либо Ubuntu)
создать пользователя и придумать пароль 

sudo apt update 
sudo - это выполнить от имени суперпользователя 
apt - каталог приложений 

установим программу cowsay - 
sudo apt install cowsay 
cowsay Привеееееееет!

выйти из Ubuntu (Debian) - exit

в MacOS - вместо apt - использовать brew 

*****************************************************************

2 - 2.4 - 1-й сверху

Hex-редакторы, файлы и кодировки 

файл - это просто последовательность бит (бит - это 0 или 1)

1011 0101 (или например FF в 16-тиричной системе) - 8 бит - 1 байт 

Hex-редактор - программа с помощью которой можно открыть любой файл и посмотреть из каких битов (байтов) состоит этот файл 

Hex-редактор есть во всех популярных ОС 

в Linux и MacOS есть встроенный консольный Hex-редактор - xxd 

в WSL мы в Linux можем работать с файловой системой Windows 

создадим в Windows на рабочем столе файл - 
--
hello.txt
--
Hello, world 
----

pwd - показывает директорию где сейчас находимся 

cd - перейти в другую директорию 
--
cd /mnt/c
----
- перейти на диск С в windows 

ls - выводит содержимое текущей директории 

перейдем на рабочий стол windows - 
--
cd Users
cd Lenov 
cd Desktop 

прочесть файл из консоли linux - 
--
cat hello.txt
----

для автодополнения - нажать Tab 

ввер и вниз - посмотреть команды которые вводили ранее

вывести текст в консоль - 
--
echo "Hellooooo"
----

из консоли Linux создать текстовый документ - перенаправить вывод в текстовый файл - 
--
echo "Hellooooo" > hello_coders.txt 
----
- в текущей папке создастся новый файл hello_coders.txt содержащий запись - Hellooooo

*****************************************************************

2 - 2.4 - 2-й сверху

посмотреть файл в Hex-редакторе -
--
xxd hello_coders.txt
----
00000000: 4865 6c6c 6f6f 6f6f 6f0a                 Hellooooo.
------
первая колонка - номера строк 
вторая колонка - отображение текста в виде байтов в 16-ой системе  
третья колонка - текстовое представление символов

выведем это иначе - 
--
xxd -c 1 -b hello_coders.txt
----
00000000: 01001000  H
00000001: 01100101  e
00000002: 01101100  l
00000003: 01101100  l
00000004: 01101111  o
00000005: 01101111  o
00000006: 01101111  o
00000007: 01101111  o
00000008: 01101111  o
00000009: 00001010  .
------
-c 1    - выводит по 1 байту на строку (побайтово)
-b      - выводит в 2-ой системе счисления 

кодировка ascii 

еще есть другие кодировки, для других языков и символов, например юникод - utf8 - это стандарт  

*****************************************************************

2 - 2.4 - 3-й сверху

по почте нельзя отправлять исполняемые файлы - .exe

С > windows > System32 > calc.exe

скопируем в Linux файл calc.exe в файл calc2 без расширения - 
--
cp calc.exe calc2 
----

удалим файл calc2 - 
--
rm calc2
----

сохраним дамп файла calc.exe в виде байтов, записанных в 16-ричной системе счисления - 
--
xxd -p calc.exe calc_dump.txt 
----
-p - это уберет справочную информацию (название строк) из нашего дампа 

на выходе у нас будет текст, содержащий последовательнотсь байтов, записанных в 16-ричной системе счисления 

откроем получившийся файл calc_dump.txt - 
--
cat calc_dump.txt 
----

теперь этот файл можно переслать по почте gmail 

переместим скачанный файл из  директории downloads в текущую директорию - 
--
mv ../Downloads/calc_dump.txt .
----
mv - команда мув 
первый атрибут - чего перемещаем 
второй атрибут - куда перемещаем 
- тут директория Downloads находится на уровень выше текущей директории 

очистить окно консоли -
--
clear 
----
или нажать Ctrl + L

теперь преобразуем скачанный файл calc_dump.txt в исполняемый файл - 
--
xxd -r -p calc_dump.txt calc.exe 
----
-r - реверс, из дампа в обычный файл 
-p - так как создавали файл с параметром -p и нет справочной информации 
calc.exe - в какой файл сохранить 

*****************************************************************

2 - 2.5 - 1-й сверху

программа - это последовательность инструкций для компьютера в виде нулей и единиц 

потом придумали высокоуровневые языки программирования, похожие на обычные языки 

в последние годы тренд идет в сторону увеличения скорости разработки, а не в сторону скорости работы программ 

*****************************************************************

2 - 2.6 - 1-й сверху

языки программирования - компилируемый и интерпретируемые 

компилируемые - как правило более низкого уровня

исходный код - это текстовый файл 

компилятор обрабатывает исходный код и выдает исполнимый файл, который уже можно запустить 

интерпретатор читает исходный код и начинает сразу выполнять его, условно говоря построчно 

компилируемые языки как правило быстрее интерпретируемых

*****************************************************************

2 - 2.7 - 1-й сверху

Алгоритмы 

алгоритм - преобразует входные данные в выходные данные

в высокоуровневых языках программирования стандартные алгоритмы уже реализованы внутри языка 

алгоритмы - это полезная вещь 

прочитать книгу - Грокаем алгоритмы 

API - програмный интерфейс для взаимодействия с какой-либо внешней системой 

*****************************************************************

3 - 3.1 - 1-й сверху

Linux - знать всем обязательно 

в андройд - приложение termux 

в Linux и Windows разные слеши в путях к директориям 
Linux - /
Windows - \

в Windows путь отсчета - это диск (C, D, F и т.п.)

в Linux отсчет идет всегда от одного места - root - это начальный слеш

автодополнение - TAB 

последние команды - кнопки - вверх и вниз

. - ссылка на текущую директорию 

.. - ссылка на предыдущую директорию 

команды Linux -

pwd

ls 
ls home/alex/
ls -l - показать листом с правами
ls -a - показать скрытые файлы 
ls -la
ls -a . - увидим файлы из текущей директории 
ls -a .. - увидим файлы из директории выше 

*****************************************************************

3 - 3.1 - 2-й сверху

история вводимых команд хранится в файле

историю команд можно вывести командой -
history 

все команды идут под номерами, если нужно повторить команду - 
пишем ! и номер этой команды -
!198

повторить предидущую команду - 
!!

команды Linux -

cd    - перейти в корневую директорию 
cd ~/ - перейти в корневую директорию 
cd .. - перейти на уровень вверх 

создадим новый пустой файл - 
touch example

выведем содержимое файла в консоль - 
cat example

выведем текст в консоль - 
echo "textttttttttttttttttttttttttttttttt"

в Linux можно перенаправлять результат выполнения одной команды в другую команду - 
echo "textttttttttttttttttttttttttttttttt" > example

переместим файл на директорию выше (если файл в текущей директории то первый путь прописывать не нежно, нужно написать только название) - 
mv example ../example2
- переместит в директорию выше 

если хотим переименовать и оставить в той же директории - 
mv example example2

получить права на директорию к которой пока нет прав доступа - 
sudo mv example ../example2

удалим файл - 
sudo rm ../example2 

можно указывать и полные пути - 
touch /home/file_name 

создать директорию - 
mkdir name_directory 

это равнозначные команды - 
ls -la name_directory/
ls -la ./name_directory/
ls -la /home/alex/name_directory/

удалим директорию и всё что в ней - 
rm -r name_directory/

перейти в начало команды - CTRL + A

перейти в конец команды - CTRL + E 

удалить последнее слово - CTRL + W

удалить всю строку - CTRL + U

*****************************************************************

3 - 3.1 - 3-й сверху

можно запустить текстовый редактор внутри консоли linux

консольных текстовых редакторов много - 
- vim 
- nano 

создадим текстовый файл - hello.txt -
--
nano hello.txt
----

в подсказке редактора - /\ - это CTRL 

сохранить - CTRL + O или CTRL + X > Y > ENTER 

вывести содержимое - 
--
cat hello.txt 
----

переименуем файл - 
--
cp hello1.txt hello2.txt 
----

скопируем файл из текущей директории в директорию /home/alex/- 
--
cp hello.txt /home/alex/hello.txt
----

открыть текстовый файл чтобы можно было листать кнопками вниз и вверх -
--
less hello.txt 
----

можно перенаправить поток вывода в команду less чтобы можно было его листать -
--
cat hello.txt | less 
----

выйти из файла - q 

посмотреть начало файла - 
--
head hello.txt 
----

посмотреть первые 10 строк файла - 
--
head -n 10 hello.txt 
----

посмотреть конец файла - 
--
tail hello.txt
----

посмотреть последние 20 строк файла - 
--
tail -n 20 hello.txt 
----

резюме - 
pwd 
ls
cd
touch 
mkdir 
rm 
cat
less
head
tail 
>
|
nano 
sudo 
cp 
mv 

*****************************************************************

3 - 3.2 - 1-й сверху

grep позволяет искать текстовую информацию в файлах и потоках вывода Linux

Например, ты открываешь незнакомый тебе проект и тебе надо в нем что-то поправить. Используя поиск grep, ты можешь быстро найти что-то в исходном коде проекта и быстро понять, где лежит нужная тебе логика.
Вот наиболее классический способ использования grep -
--
grep -rin --include="*.py" "возникла ошибка" .
----

Здесь мы вызываем команду grep. Чтобы задать, как именно, где именно и что искать, мы передаём в grep параметры. Параметры -rin обозначают буквально следующее:
- r — рекурсивный поиск, то есть в директории и всех её поддиректориях
- i — case-insensitive поиск, то есть ищем без учёта регистра (найдётся и Ошибка, и ошибка, и ОШИБКА)
- n — мы хотим вывести в найденных файлах не только искомые строки, но и их номера, чтобы можно было легко затем открыть файл в текстовом редакторе, поддерживающем автоматическое отображение номеров строк, и найти там нужную строку
--include="*.py" говорит grep, что нас интересуют только файлы, заканчивающиеся на .py, это исходные коды программ на язык программирования Python, как мы узнаем позже. Звездочка обозначает здесь любые символы, то есть отфильтруются файлы, начинающиеся с любых символов, но заканчивающиеся именно на символы .py.
"возникла ошибка" - искомый текст. Это тот текст, который будет искать grep в файлах, названия которых заканчиваются на .py.
И, наконец, точка в конце команды обозначает, что мы хотим искать в текущей директории. Если бы мы хотели искать в директории /tmp, то вместо точки указали бы /tmp -
--
grep -rin --include="*.py" "возникла ошибка" /tmp/
----

Эти параметры являются опциональными. Например, мы можем искать и так:
--
grep "возникла ошибка" /tmp/
----
если мы хотим искать только в директории /tmp, но не в её поддиректориях, нам не нужны номера найденных строк, регистр текста именно тот, что мы задали, а интересуют нас файлы с любым расширением, не только файлы с Python кодом.

*****************************************************************

4 - 4.1 - 1-й сверху

Как работает интернет и веб 

Многие начинают с синтаксиса языка программирования 

Професианализм складывается из множества мелких составляющих, которые на первый взгляд могут показаться ненужными и неважными, но на практике именно они и позволяют выполнять задачи быстро и эффективно

*****************************************************************

4 - 4.2 - 1-й сверху

интернет - это большая сеть из компьютеров по всему миру 

маршрутизатор - соединяет в сеть несколько компьютеров 

интранет - локальная сеть без интернета 

маршрутизаторы тоже можно соединить в сеть 

интернет - глобальная сеть, сеть сетей 

*****************************************************************

4 - 4.3 - 1-й сверху

локальные и глобальные сети 

LAN - Local Access Network (покрывает небольшую территорию)
WAN - Wide Access Network (покрывает большие территории и расчитана на большое количество устройств в сети)

*****************************************************************

4 - 4.4 - 1-й сверху

сетевые протоколы 

протокол - это спецификация, заранее согласованный стандарт 

протокол TCP/IP - протокол управления передачей данных - 4 уровня -
- прикладной (с котором будем работать мы)
- транспортный 
- межсетевой (IP)
- канальный 

прикладной уровень - 
FTP - передача файлов на сервер 
SMB - для доступа к общим директориям
HTTP - гипертекст (контент) для браузера, приложения и т.п.
HTTPS - гипертекст (контент) для браузера с шифрованием 
SSH - для безопасного подключения к внешнему серверу 
DNS - система доменных имен, узнает по текстовому адресу IP-адрес сервера

*****************************************************************

4 - 4.5 - 1-й сверху

IP протокол - отвечает за доставку информации между компьютерами в сети 

у всех компьютеров в сети должен быть свой уникальный IP-адрес 

у протокола IP есть два стандарта - 
IPv4
IPv6 

пример IP-адреса - 192.168.1.1 

каждое число здесь - от 0 до 255 

IPv4 на всех не хватает, провайдеры используют один IP-адрес для подключения множества устройств (внутри сети провайдера IP один, а внешний IP у нескольких устройств общий) - это технология называется NAT 

в IPv6 - IP-адресов может быть больше, чем в IPv4 (в IPv4 - примерно 4,5 миллиарда)

*****************************************************************

4 - 4.5 - 2-й сверху

как узнать свой внешний IP-адрес - 
yandex.ru/internet/
или 
toolbox.googleapps.com/apps/browserinfo/ 

команда в WSL - 
ipconfig.exe

тут -
"IPv4-адрес" - это адрес компьютера в локальной сети 
"основной шлюз" - это IP-адрес роутера Wi-Fi 

есть 4 сегмента IP-адресов, которые всегда являются локальными - 
10.0.0.0
172.16.0.0 
192.168.0.0 
127.0.0.0 - это IP-адрес компьютера 

IP-адреса, которые не относятся к локальным, называются "белыми"

узнать ip-адрес домена в интернете - 
ping google.com 
но перед этим нужно в WSL выполнить команду - 
sudo setcap cap_net_raw+p /bin/ping 

*****************************************************************

4 - 4.6 - 1-й сверху

клиент (браузер, почтовый клиент) - сервер (компьютер, программа)

серверная и клиентская программы могут быть установленны на одном компьютере 

на одном физическом сервере могут стоять несколько серверных программ 

*****************************************************************

4 - 4.7 - 1-й сверху

прокси-сервера и VPN 

прокси-сервер - это промежуточный сервер через который идет трафик (прокладка)

vpn - виртуальная приватная сеть - сеть вокруг другой сети с шифрованием трафика

https - шифрует весь трафик 

вывод - IP-адрес можно подменять 

*****************************************************************

4 - 4.8 - 1-й сверху

DHCP 

IP-адреса назначаются либо вручную либо автоматически протоколом динамической настройки DHCP 

MAC address - адрес сетевой карты 
MAC address - можно подменить (подделать)

*****************************************************************

5 - 5.1 - 1-й сверху

DNS - преобразует доменное имя в IP-адрес 
google.com >>> 216.58.211.238
домен первого уровня - com 
домен второго уровня - google 

может быть и третий уровень - 
mail.google.com 

DNS - распределенная база данных, которая хранит соответствие между доменными именами и IP-адресами

*****************************************************************

5 - 5.2 - 1-й сверху

доменные зоны 

домены 1-го (верхнего) уровня - их около 1 500 -
.com 
.ru 
.org 
.gov 
.pizza 
и т.п. 

домены 2-го уровня - регистрируются специальными регистраторами за деньги, домен может быть зарегистрирован как на физлицо так и на компанию, данные владельцев открыты -
mycompany.com 
google.com 
mail.ru 

домены 3-го уровня -
mail.google.com
go.yandex.ru 

посмотреть на кого зарегистрирован домен - who is - 
https://www.nic.ru/whois/

. - корневой домен, он один - точка в конце адреса, обычно её не видно, она скрывается - 
google.com.

*****************************************************************

5 - 5.3 - 1-й сверху

Система DNS серверов 

вводим в поисковую строку google.com - браузеру нужно выяснить, какой IP у сайта google.com - DNS Resolver (как правило этот сервис находится у нашего провайдера) - корневой DNS-сервер - DNS-сервер обслуживающий доменную зону .com возвращает IP-адрес сайта google.com по которому и переходит браузер 

DNS-сервера расположены по всему миру распределенно (есть DNS- сервера обслуживающие доменные зоны (например - .com, корневую - .))

во всем мире существует 13 корневых серверов (зоны где точка)

кеширование - это как склад временного хранения, сохраняет ответы на старые аналогичные запросы к популярным сайтам, поэтому данные хранятся в кеше серверов и длинных запросов не происходит 

но с кешированием возникает проблема обновления, когда меняется сервер сайта и соответственно IP-адрес - тогда применяют TTL (это время в течении которого запись может быть закеширована, время жизни кеша)

нормальным считается TTL примерно в 6 часов 

*****************************************************************

5 - 5.4 - 1-й сверху

DNS-записи 

основная задача DNS - сопоставление доменного имени IP-адресу 

для каждой DNS-записи есть свой тип - 

- для задачи сопоставления доменного имени IP-адресу существует тип записи - 
- А-запись для IPv4
- АААА-запись для IPv6 

TXT-запись - это справочная информация, которой могут пользоватся сервисы - при подтверждении права на владение доменом на домене размещается TXT-запись 

MX-запись - адрес почтового сервера на домене 
mycompany.com - домен 
user@mycompany.com - пример адреса на домене 

одному домену может соответствовать несколько IP-адресов, обычно до 6 штук 

на одном IP-адресе могут работать несколько доменов (для экономии IP-адресов) - на одном сервере с одним IP может находится несколько сайтов, сервер при обработке входящего запроса отправляет клиента на тот или иной домен 

*****************************************************************

5 - 5.5 - 1-й сверху

Как посмотреть DNS записи любого домена -

1. консольная утилита dig 
2. готовые web-сервисы - как пример -
toolbox.googleapps.com/apps/dig 

*****************************************************************

5 - 5.6 - 1-й сверху

Файл hosts и доменное имя localhost

в каждой операционной системе есть файл hosts - там можно задать настройки DNS и эти настройки будут иметь максимальный приоритет в системе 

этот файл находится:
- в unix-системах по адресу - 
/etc/hosts 
- в Windows - 
%SystemRoot%\system32\drivers\etc\hosts 
- в Android - 
/system/etc/hosts 

посмотреть файл hosts:
- в linux команда - 
cat /etc/hosts 
- в Windows открыть в блокноте запущенном от имени администратора (автор добавил в конец файла - 127.0.0.1 myproject)

этот файл можно редактировать и добавлять туда свое сопоставление IP-адресов и хостнеймов 

командами ping (работает в linux и в Windows) 
с помощью ping можно проверить наличие интернета -
--
ping google.com 
----
и
--
ping 8.8.8.8
----
- если 8.8.8.8 работает а google.com нет, то проблема с настройками DNS, если работает в обоих случаях - то интернет работает нормально 

раньше когда не все сайты работали на https некоторые вирусы меняли файл hosts на локальных компьютерах чтобы при переходе на vk.ru пользователь перенаправлялся на подменный сайт с такой же формой ввода логина и пароля, но сейчас такое невозможно так как проверяется SSL-сертификат 

*****************************************************************

6 - 6.1 - 1-й сверху

HTTP 

когда в браузере заходим  - 
google.com 
- то полный адрес - 
https://www.google.com 

HTTP - протокол передачи гипертекста 

гипертекст - это текстовые страницы, которые ссылаются друг на друга 

под гипертекстом подразумевают HTML-документы 

в Google Chrome - ПКМ - просмотр кода страницы 

2-35











































































































































*****************************************************************
*****************************************************************
*****************************************************************
*****************************************************************
*****************************************************************

Django уроки с нуля за ОДИН час - 
https://youtube.com/watch?v=ynHiC9w4lp4&si=Jd0EOZNPEPPqCx3N
dgango_chas - VSCode
-
делать заметки тезисно 
повторять код за автором 
-
Код проекта и другие учебныные материалы:
https://t.me/dmitrii_avdeenko/51
-
скачать python с официального сайта 
скачать PyCharm 
-
08-45


















































































*****************************************************************
*****************************************************************
*****************************************************************
*****************************************************************
*****************************************************************

https://youtu.be/664imIyaK-A?si=B-HMyC5rwloJh7zY
+
как расшарить в интернет наш локальный веб-сервер - 
+
для телеграм-ботов 
для систем оплаты (экваринга)
быстро кому-то что-то показать
+
--
# запустим локальный сервер - 
# из папки где материалы для раздачи - 

python3.12 -m http.server 
----
- теперь по адресу в браузере - localhost - доступны материалы из папки, откуда был запущен сервер 
+
и можно поднять веб-сервер на старом телефоне с android 
+
1 способ - 
https://ngrok.com - зарегистрироваться на сайте 
-
VPN!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!VPN
OleSiv365
pomoykabc@gmail.com
a........365
https://dashboard.ngrok.com/get-started/setup/windows
+
установить на MacOs - 
--
arch -arm64 brew install ngrok/ngrok/ngrok 
----
установить на Linux - 
https://dashboard.ngrok.com/get-started/setup/linux
+
посмотреть как установить на linux ?
+
на сайте скопировать токен и выполнить эту команду 
+
--
python3.12 -m http.server 

ngrok http http://localhost:8000 
----
и нам будет выдан рандомный домен - 
https://.............ngrok-free.app 
+
но это рандомный домен, но можно получить и статичный домен - 
во вкладке Domains 

скопировать и выполнить команду - в видео с 08-08



<<<